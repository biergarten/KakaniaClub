// <auto-generated />
using System;
using Mas.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mas.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mas.Domain.Aggregate.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignToUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateInitiated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MembershipType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Mas.Domain.Aggregate.Application", b =>
                {
                    b.OwnsOne("Mas.Domain.ValueObjects.Person", "Person", b1 =>
                        {
                            b1.Property<Guid>("ApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ApplicationId");

                            b1.ToTable("Applications");

                            b1.WithOwner()
                                .HasForeignKey("ApplicationId");

                            b1.OwnsOne("Mas.Domain.ValueObjects.PersonName", "Name", b2 =>
                                {
                                    b2.Property<Guid>("PersonApplicationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("PersonApplicationId");

                                    b2.ToTable("Applications");

                                    b2.WithOwner()
                                        .HasForeignKey("PersonApplicationId");
                                });

                            b1.Navigation("Name")
                                .IsRequired();
                        });

                    b.OwnsOne("Mas.Domain.ValueObjects.ReferralProcessInfo", "ReferralProcessInfo", b1 =>
                        {
                            b1.Property<Guid>("ApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("EmailNewLocation")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EmailOriginalLocation")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("HasEmailBeenMoved")
                                .HasColumnType("bit");

                            b1.Property<int>("ReferralStatus")
                                .HasColumnType("int");

                            b1.HasKey("ApplicationId");

                            b1.ToTable("Applications");

                            b1.WithOwner()
                                .HasForeignKey("ApplicationId");
                        });

                    b.Navigation("Person")
                        .IsRequired();

                    b.Navigation("ReferralProcessInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
